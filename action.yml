name: Python poetry setup action
description: Base action for python+poetry projects

inputs:
  checkout:
    description: Whether to use basic checkout. Disable for more complex checkout usages
    default: true
  # Cache
  cache-key:
    description: A key to use for cache
    required: true
  restore-keys:
    description: An ordered list of keys to fallback when cache-key missed
  additional-cache:
    description: Additional cache path entries
  # Other
  python-version:
    description: Python version
    required: true
    default: '3.x'
  poetry-version:
    description: Poetry version
    default: latest
  install-command:
    description: Dependency install command
    default: poetry install

outputs:
  cache-hit:
    description: Pip poetry cache hit status

runs:
  using: composite 
  steps:
    - uses: actions/checkout@v3
      if: inputs.checkout == 'true'

    - uses: actions/cache@v3
      id: pip-poetry-cache
      with:
        path: |
          ~/.cache/pip
          #~/AppData/Local/pip/cache
          ~/.cache/pre-commit
          ~/.cache/pypoetry
          # poetry installation
          ~/.local
          ~/AppData/Roaming/Python/Scripts
          # venv
          .venv
          # additional
          ${{ inputs.additional-cache }}
        key: ${{ inputs.cache-key }}
        restore-keys: ${{ inputs.restore-keys }}

    - name: Set up Python ${{ inputs.python-version }} on ${{ runner.os }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ inputs.python-version }}
        #cache: 'poetry'

    - name: Install poetry
      #if: steps.pip-poetry-cache.outputs.cache-hit != 'true'
      uses: snok/install-poetry@v1.3.1
      with:
        version: ${{ inputs.poetry-version }}
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Add poetry to UNIX PATH
      if: steps.pip-poetry-cache.outputs.cache-hit == 'true' && runner.os != 'Windows'
      shell: bash
      run: |
        echo "~/.local/bin" >>"$GITHUB_PATH"

    - name: Add poetry to Windows PATH
      if: steps.pip-poetry-cache.outputs.cache-hit == 'true' && runner.os == 'Windows'
      shell: bash
      run: |
        echo "~/AppData/Roaming/Python/Scripts" >>"$GITHUB_PATH"

    - name: Install dependencies
      #if: steps.pip-poetry-cache.outputs.cache-hit != 'true'
      shell: bash
      run: ${{ inputs.install-command }}

    - name: debug
      shell: bash
      run: |
        choco install tree
        pip --version
        #tree -L 2 ~/AppData/Local
        #tree -L 2 ~/AppData/Roaming/Python/Scripts
        tree -L 2 '~/Application Data'
        #env | grep PATH

    - name: Set outputs
      shell: bash
      run: |
        echo ::set-output name=cache-hit::${{ steps.pip-poetry-cache.outputs.cache-hit }}

