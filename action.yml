name: Python poetry setup action
description: Base action for python+poetry projects

# TODO: change .local cache
# TODO: venv input
# TODO: make sure pip has PATH set up if using cache
# TODO: outputs cache hit

inputs:
  checkout:
    description: Whether to use basic checkout. Disable for more complex checkout usages
    default: true
  # Cache
  cache-key:
    description: A key to use for cache
    required: true
  restore-keys:
    description: An ordered list of keys to fallback when cache-key missed
  additional-cache:
    description: Additional cache path entries
  # Other
  python-version:
    description: Python version
    required: true
  poetry-version:
    description: Poetry version
  pre-commit:
    description: Whether to cache pre-commit
    default: false

runs:
  using: composite 
  steps:
    - uses: actions/checkout@v3
      if: inputs.checkout == 'true'

    - uses: actions/cache@v3
      id: pip-poetry-cache
      with:
        path: |
          ~/.cache/pip
          ~/.cache/pre-commit
          ~/.cache/pypoetry
          # there is only poetry at this point
          ~/.local
          # poetry-created venv
          .venv
          ${{ inputs.additional-cache }}
        key: ${{ inputs.cache-key }}
        restore-keys: ${{ inputs.restore-keys }}

    - name: Set up Python ${{ inputs.python-version }} on ${{ runner.os }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install poetry
      if: steps.pip-poetry-cache.outputs.cache-hit != 'true'
      uses: snok/install-poetry@v1.3.1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install dependencies
      if: steps.pip-poetry-cache.outputs.cache-hit != 'true'
      shell: bash
      run: poetry install

    - name: Add poetry to PATH
      if: steps.pip-poetry-cache.outputs.cache-hit == 'true'
      shell: bash
      run: echo "~/.local/bin" >>"$GITHUB_PATH"

